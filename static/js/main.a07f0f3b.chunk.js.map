{"version":3,"sources":["Components/Home.js","Components/DashLine.js","Components/Bar.js","Components/ControlledCarousel.js","Components/About.js","Components/Portfolio.js","Components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","Container","Image","src","process","roundedCircle","Component","DashLine","Bar","to","Button","variant","ControlledCarousel","props","useState","index","setIndex","Carousel","activeIndex","onSelect","selectedIndex","e","id","url","title","map","slide","Item","alt","Caption","About","href","Portolio","Row","name","imgUrl","description","webUrl","project","Card","style","width","Img","Body","Title","Text","target","Contact","App","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a07f0f3b.chunk.js","sourcesContent":["\nimport React, { Component } from \"react\";\nimport '../App.css';\n\nimport { Container, Image } from 'react-bootstrap';\n\n\nclass Home extends Component {\n  render() {\n    \n    return (\n      <div className=\"home\">\n        <div className='home-intro'>\n            <Container>\n                <Image className='home-photo' src={process.env.PUBLIC_URL + '/images/IMG_me.jpg'} roundedCircle />\n            </Container>\n            <h3 className='home-name'>PinHo (Jimmy) Wang</h3>\n            <h4 className='home-brief'>\n                New Grad Software Engineer<br />\n                Love Full Stack Techniques\n            </h4>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","\nimport React, { Component } from \"react\";\nimport \"../App.css\";\n\nclass DashLine extends Component {\n  render() {\n    \n    return (\n      <div className=\"bar-dash\">\n      </div>\n    );\n  }\n}\n\nexport default DashLine;\n","\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport DashLine from \"./DashLine\";\n\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\nclass Bar extends Component {\n  render() {\n    \n    return (\n      <div className=\"bar\">\n        <div className='bar-main'>\n            <Link to='/'>\n                <h3 className='bar-title'>Jimmy Wang</h3>\n            </Link>\n            <Link to='/contact'>\n                <Button className='bar-item' variant=\"outline-info\">Contact</Button>\n            </Link>\n            <Link to='/portfolio'>\n                <Button className='bar-item' variant=\"outline-info\">Portfolio</Button>\n            </Link>\n            <Link to='/about'>\n                <Button className='bar-item' variant=\"outline-info\">About</Button>\n            </Link>\n            <Link to='/'>\n                <Button className='bar-item' variant=\"outline-info\">Home</Button>\n            </Link>\n        </div>\n        <DashLine />\n      </div>\n    );\n  }\n}\n\nexport default Bar;\n","import React, { useState } from \"react\";\nimport { Carousel } from \"react-bootstrap\";\n\nfunction ControlledCarousel(props) {\n  const [index, setIndex] = useState(0);\n\n  const handleSelect = (selectedIndex, e) => {\n    setIndex(selectedIndex);\n  };\n\n  const slides = [\n    { id: 0, url: process.env.PUBLIC_URL + \"/images/IMG_1.jpg\", title: 'SF Lombard Street' },\n    { id: 1, url: process.env.PUBLIC_URL + \"/images/IMG_2.jpg\", title: 'Alaska Seward' },\n    { id: 2, url: process.env.PUBLIC_URL + \"/images/IMG_3.jpg\", title: 'Alaska Box Canyon Creek' },\n    { id: 3, url: process.env.PUBLIC_URL + \"/images/IMG_4.jpg\", title: 'Alaska Seward' },\n    { id: 4, url: process.env.PUBLIC_URL + \"/images/IMG_5.jpg\", title: 'AZ Antelope Canyon' },\n    { id: 5, url: process.env.PUBLIC_URL + \"/images/IMG_6.jpg\", title: 'LA Venice Beach' },\n  ];\n\n  return (\n    <Carousel className='about-carousel' activeIndex={index} onSelect={handleSelect}>\n      {\n        slides.map(slide => (\n            <Carousel.Item>\n            <img\n                className=\"d-block w-100\"\n                src={slide.url}\n                alt=\"First slide\"\n            />\n            <Carousel.Caption>\n                <h3>{slide.title}</h3>\n                {/* <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p> */}\n            </Carousel.Caption>\n            </Carousel.Item>\n        ))\n      }\n    </Carousel>\n  );\n}\n\nexport default ControlledCarousel;\n","import React, { Component } from \"react\";\nimport ControlledCarousel from \"./ControlledCarousel\";\n\nimport \"../App.css\";\n\nclass About extends Component {\n  render() {\n    return (\n      <div className=\"about\">\n        <div className='about-carousel-block'>\n          <ControlledCarousel />\n        </div>\n\n        <div className=\"about-context\">\n            <h3>About Me</h3>\n            <p>\n                Pinho Wang loves programming, snowboarding, hiking, learning and sharing new things.\n                He is currently seeking for software engineer position and desires to dedicate on \n                amazing products using by millions of people. <br/> Previously, he worked as a software engineer \n                intern at IBM majorly working on threat intelligence applications. \n                He also dedicated on web application projects and got his Masters at Northeastern University. \n                For more info, check out his projects, <a href={process.env.PUBLIC_URL + '/Resume.pdf'}>Resume</a> and <a href='https://www.linkedin.com/in/pinhowang/'>Linkedin</a>.\n            </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from \"react\";\n\nimport \"../App.css\";\n\nimport { Card, Button, Container, Row } from \"react-bootstrap\";\n\nclass Portolio extends Component {\n  render() {\n    const projects = [\n      {\n        name: \"Movie Reservation System\",\n        imgUrl: process.env.PUBLIC_URL + \"/images/movie.png\",\n        description: \"\",\n        webUrl: \"https://github.com/PinHoWang/MovieBookingSystem\",\n      },\n      {\n        name: \"Analyze Crimes in Boston\",\n        imgUrl: process.env.PUBLIC_URL + \"/images/crimes.png\",\n        description: \"\",\n        webUrl: \"https://github.com/CSYE7200/Analyze-Crimes-Boston\",\n      },\n      {\n        name: \"Comments Map\",\n        imgUrl: process.env.PUBLIC_URL + \"/images/map.png\",\n        description: \"\",\n        webUrl: \"https://github.com/PinHoWang/Map\",\n      },\n      {\n        name: \"Chat Bot\",\n        imgUrl: process.env.PUBLIC_URL + \"/images/chatbot.png\",\n        description: \"\",\n        webUrl: \"https://github.com/PinHoWang/ChatBox\",\n      },\n      {\n        name: \"Day Care System\",\n        imgUrl: process.env.PUBLIC_URL + \"/images/daycare.png\",\n        description: \"\",\n        webUrl: \"https://github.com/PinHoWang/DayCareProject\",\n      }\n    ];\n\n    return (\n      <div className=\"portolio\">\n        <Container>\n          <Row className='portfolio-row'>\n            {projects.map((project) => (\n              <Card className=\"portfolio-card\" style={{ width: \"18rem\" }}>\n                <Card.Img className='protfolio-card-img' variant=\"top\" src={project.imgUrl} />\n                <Card.Body>\n                  <Card.Title>{project.name}</Card.Title>\n                  <Card.Text>{project.description}</Card.Text>\n                  <Button href={project.webUrl} target='_blank' variant=\"primary\">\n                    Take a Look\n                  </Button>\n                </Card.Body>\n              </Card>\n            ))}\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Portolio;\n","\nimport React, { Component } from \"react\";\n\n\nclass Contact extends Component {\n  render() {\n    \n    return (\n      <div className=\"contact\">\n        <h1>Contact Page</h1>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport { Route, Switch} from 'react-router-dom';\n\n\nimport Home from \"./Components/Home\";\nimport Bar from \"./Components/Bar\";\nimport About from \"./Components/About\";\nimport Portolio from \"./Components/Portfolio\";\nimport Contact from \"./Components/Contact\";\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App\">\n          <Bar />\n          <div className='container-routes'>\n            <Switch>\n              <Route exact path={['/', '/personal-website']} render={() => <Home />} />\n              <Route exact path='/about' render={() => <About />} />\n              <Route exact path='/portfolio' render={() => <Portolio />} />\n              <Route exact path='/contact' render={() => <Contact />} />\n            </Switch>\n          </div>\n\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}